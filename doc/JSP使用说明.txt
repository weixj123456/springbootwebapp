JSP select下拉标签 简单使用
问题描述：项目过程中有一个需要用到下拉菜单用来存放学历信息 博士 硕士 本科 专科  第一次需要用到这个小的知识点，就简单总结一下
直接放代码，后边是讲解：
要用到<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>  JSTL标签库需要提前引入 
//代码部分：
<li><label>学历</label>
	<select name="educa" >
			<option value="a" <c:if test="${educa=='a'}"></c:if>>博士</option>
			<option value="b" <c:if test="${educa=='b'}"></c:if>>硕士</option>
			<option value="c" <c:if test="${educa=='c'}"></c:if>>本科</option>
			<option value="d" <c:if test="${educa=='d'}"></c:if>>专科</option>
	</select>
</li> 


//=========================================
<!--
JSP 下拉选择框和输入框的问题
<tr>
                <td align="right" class="left">活动类型：</td>
                <td align="left">
                    <select id="type" name="type">
                        <option value="">==请选择==</option>
                        <option value="1" <c:if test="${pBanner.type == 1}">selected</c:if> >打开界面activity</option>
                        <option value="2" <c:if test="${pBanner.type == 2}">selected</c:if> >打开优惠网页</option>
                        <option value="3" <c:if test="${pBanner.type == 3}">selected</c:if> >优惠产品</option>
                        <option value="4" <c:if test="${pBanner.type == 4}">selected</c:if> >点击分享</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td width="30%" height="25" align="right" class="left">跳转地址: </td>
                <td height="25" align="left" width="70%">
                    <input id="baner_adress" name="baner_adress"  value="${pBanner.baner_adress}" />
                </td>
            </tr>
       -->     
       
       
       jsp页面中的下拉列表
在WEB开发过程中，我们经常遇到信息修改的功能需求。这时我们给用户提供一个JSP页面，展示出当前的信息并
<table>
    <tr>
        <td align="right" class="left">活动类型：</td>
        <td align="left">
            <select id="type" name="type" onchange="setTdHtml(this.value)">
                <option value="">==请选择==</option>
                <option value="1" <c:if test="${pBanner.type == 1}">selected</c:if> >打开界面activity</option>
                <option value="2" <c:if test="${pBanner.type == 2}">selected</c:if> >打开优惠网页</option>
                <option value="3" <c:if test="${pBanner.type == 3}">selected</c:if> >优惠产品</option>
                <option value="4" <c:if test="${pBanner.type == 4}">selected</c:if> >点击分享</option>
            </select>
        </td>
    </tr>
    <tr>
        <td width="30%" height="25" align="right" class="left">跳转地址: </td>
        <td height="25" align="left" width="70%" id="tdUrl">
            <input id="baner_adress" name="baner_adress" value="${pBanner.baner_adress}" />
        </td>
    </tr>
</table>
<script>
    function setTdHtml(v) {
        var td = document.getElementById('tdUrl');
        switch (v) {
            case '1': td.innerHTML = 'xxxxxxx'; break;
            case '2': td.innerHTML = 'xxxxxxx'; break;
            case '3': td.innerHTML = 'xxxxxxx'; break;
                //...more
        }
    }
</script>
 //===========================================
 //===========================================
 JSP页面select下拉框数据回显
 MVC框架下JSP页面select下拉框数据回显：

<li><label>经营商家<b>*</b></label>  
	<div class="vocation">
		<select class="select1" name="p_store" >
			<option value="淘宝"<%if("淘宝".equals(products.getP_store())){%> selected<%} %>>淘宝</option>
			<option value="天猫"<%if("天猫".equals(products.getP_store())){%> selected<%} %>>天猫</option>
			<option value="其他"<%if("其他".equals(products.getP_store())){%> selected<%} %>>其他</option>
		</select>
	</div>
</li>
————————————————
版权声明：本文为CSDN博主「wgllu」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_23190729/article/details/76774801       
 //===========================================
 jsp页面数据回显（select下拉选择框）
 jsp页面数据回显（select下拉选择框+c标签）
 <select name="clazz">
		<c:forEach items="${clazzList }" var="clazz">
			<option value ="${clazz.bid }" 		
				<c:if test="${clazz.bid==tbStudent.bid }">
					selected="selected"
				</c:if>		
			>${clazz.bname }</option>
		</c:forEach>		
</select>       
//==============================
jsp页面数据回显（checkbox）
jsp页面数据回显（checkbox+c标签）
<c:forEach items="${courseList }" var="c">
		<input type="checkbox" name="course" id="" value="${c.cid }"	
			<c:forEach items="${tbStudent.courses }" var="cc">
				<c:if test="${c.cid==cc.cid }">
					checked=true
				</c:if>		
			</c:forEach>	
		 />${c.cname }
	</c:forEach>
	//=========================================
 //===========================================
 package cn.hnpi.jdbcweb.servlet;
 
import java.io.IOException;
import java.util.List;
 
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
 
import cn.hnpi.jdbcweb.biz.TypeBiz;
import cn.hnpi.jdbcweb.biz.impl.TypeBizImpl;
import cn.hnpi.jdbcweb.vo.TypeVo;
@WebServlet("/ToBookAdd")
public class ToBookAddServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
				TypeBiz typeDao=new TypeBizImpl();
				List<TypeVo> ls=typeDao.getBookType();
				request.setAttribute("bookType", ls);
				request.getRequestDispatcher("bookAdd.jsp").forward(request, response);
	}
 
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}
 
}

 在jsp页面获取vo对象，循环建立option标签
 	<select name="tid" id=typeSel>
	<%
	List<TypeVo> ls = (ArrayList<TypeVo>)request.getAttribute("bookType");
	for (TypeVo typeVo : ls) {%>
	<option value="<%=typeVo.getId()%>"><%=typeVo.getName() %></option>
	<%
	}
	%>
	</select>       
	
//======================================
//======================================
//======================================
                                                                                          jsp页面弹出框，ajax做数据回显
在页面中做“编辑”功能时，往往需要在当前页面出现一个弹出框，页面变成灰色，在弹出框中回显原本的数据，修改后保存至数据库中。具体做法如下：

1.在当前jsp页面书写form表单
form表单的写法、样式等都跟普通的一样，唯独不同的是在form标签中加入display:none属性。示例：

<a onclick="showLayer(${item.proId})">编辑</a>
<div id="layerBg"></div>
<form id="layer" action="" method="post">
	<h3 align="center">项目信息修改</h3><br>
	<input style="display: none" type="text" id="proId" name="proId" />
	<label>项目名称： </label><input type="text" id="proName" name="proName" />
	<input type="submit" value="确认" >
	<input type="button" value="取消" onclick="hideLayer()">
</form>

2.css代码
<style type="text/css">
	#layer {
   		display: none;
  		position: absolute;
  		z-index:11;
	}
	#layerBg {
		display: none;
		position: absolute;
		z-index:10;
		background:#DCDBDC;
		width: 1370px;
		height: 920px;
		-moz-opacity: 0.8;
		opacity:.80;
		left:0;
		top:0;
	}
</style>
其中，
1.<a onclick="showLayer(${item.proId})">编辑</a>里调用方法showLayer(id)的参数视情况而定；这里参数主要用于在数据库查询对应的数据，用来做页面回显。
2.proId需要用于后续在数据库中查询数据，但在页面上不需要显示，所以也设置为display:none

3.showLayer(id)方法
<script type="text/javascript">
	function showLayer(id) {
		$.ajax({
			type : "post",
			dataType : "json",
			url : "${pageContext.request.contextPath }/project/showProjectByProId.action",
			data : {
				"proId" : id
			},
			success : function(data) {
				var arr = data.project;
				$('#proId').val(arr.proId);
				$('#proName').val(arr.proName);
			},
			error : function(data) {
				alert("系统错误");
			}
		});  
		$('#layer').css({"display": "block"});
		return false;
	}
</script>

4.hideLayer()方法
<script type="text/javascript">
	function hideLayer() {
		$('#layer').css({"display": "none"});
		window.location.reload();
	}
</script>
————————————————
版权声明：本文为CSDN博主「肉团子啊啊啊」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_42384915/article/details/88660114